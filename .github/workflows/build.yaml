name: Build and Analyze with SonarQube

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Set up Java 17 for SonarScanner
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarQube scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install coverlet collector
        run: dotnet add SonarDemo.Tests/SonarDemo.Tests.csproj package coverlet.collector

      - name: Begin SonarScanner
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SonarGit" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.cobertura.xml"

      - name: Build project
        run: dotnet build

      - name: Run tests with coverage
        run: dotnet test SonarDemo.Tests/SonarDemo.Tests.csproj --collect:"XPlat Code Coverage"

      - name: End SonarScanner
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
